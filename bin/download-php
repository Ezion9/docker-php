#!/bin/sh

# Script for downloading and extracting PHP source code. It also checks for
# file integrity.

# PHP version can be passed as an argument for example ./download-php 7.1
case "$1" in
	7.2)
    PHP_VERSION="7.2.0alpha1"
    PHP_URL="https://downloads.php.net/~pollita/php-$PHP_VERSION.tar.xz"
    PHP_ASC_URL="https://downloads.php.net/~pollita/php-$PHP_VERSION.tar.xz.asc"
    GPG_KEYS="1729F83938DA44E27BA0F4D3DBDB397470D12172 B1B44D8F021E4E2D6021E995DC9FF8D3EE5AF27F"
    ;;
  *)
    PHP_VERSION="7.1.6"
    PHP_URL="https://secure.php.net/get/php-$PHP_VERSION.tar.xz/from/this/mirror"
    PHP_ASC_URL="https://secure.php.net/get/php-$PHP_VERSION.tar.xz.asc/from/this/mirror"
    GPG_KEYS="A917B1ECDA84AEC2B568FED6F50ABC807BD5DCD0 528995BFEDFBA7191D46839EF9BA0ADA31CBD89E"
    PHP_SHA256="01584dc521ab7ec84b502b61952f573652fe6aa00c18d6d844fb9209f14b245b"
    PHP_MD5="eafc7a79cc8cc62c9292c96f9c9ccf90"
	  ;;
esac

curl -o php.tar.xz -OL $PHP_URL

if [ -n "$PHP_SHA256" ]; then
  echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -
fi;

if [ -n "$PHP_MD5" ]; then
  echo "$PHP_MD5 *php.tar.xz" | md5sum -c -
fi;

if [ -n "$PHP_ASC_URL" ]; then
  curl -o php.tar.xz.asc -OL "$PHP_ASC_URL"
  export GNUPGHOME="$(mktemp -d)"

  for key in $GPG_KEYS; do
    gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"
    gpg --fingerprint $key
  done;

  gpg --batch --verify php.tar.xz.asc php.tar.xz
  rm -r "$GNUPGHOME"
fi;

tar -Jxf php.tar.xz
rm php.tar.xz php.tar.xz.asc
