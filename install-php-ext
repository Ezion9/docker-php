#!/bin/bash

# Helper installation script for PHP extensions
#
# PHP and PECL extensions format: key is the PHP extension name, value is the
# system dependency.

# Output usage documentation and help
function usage () {
cat <<END
Helper installation script for PHP extensions
Usage: install-php-ext EXTENSION1 EXTENSION2 ...
END
}

# Assign package managers and tasks based on operating system
declare -A os=(
  [/etc/alpine-release]=apk
  [/etc/debian_version]=apt-get
)

for f in ${!os[@]}
do
  if [[ -f $f ]];then
    case "${os[$f]}" in
      # Alpine
      apk)
        # System dependencies for building extensions and downloading PHP
        BUILD_DEPS="autoconf gcc g++ make re2c gnupg linux-headers pkgconf"
        # Tasks before extensions installation
        pre_install="apk add --no-cache --virtual .build-deps $BUILD_DEPS"
        install_deps="apk add --no-cache "
        post_install="apk del .build-deps && rm -rf /usr/src/*"
        j=$(getconf _NPROCESSORS_ONLN)

        # Supported PHP extensions for Alpine
        declare -A core_extensions=(
          [enchant]=enchant-dev
          [gmp]=gmp-dev
          [mcrypt]=libmcrypt-dev
          [mysqli]=
          [pcntl]=
          [pdo_mysql]=
          [pdo_pgsql]=postgresql-dev
          [pgsql]=postgresql-dev
          [pspell]=aspell-dev
          [soap]=libxml2-dev
          [tidy]=tidyhtml-dev
          [wddx]=libxml2-dev
          [xmlrpc]=libxml2-dev
        )

        # Supported PECL extensions for Alpine
        declare -A extensions=(
          [imagick]="imagemagick-dev libtool"
          [libsodium]=libsodium-dev
          [memcached]="libmemcached-dev cyrus-sasl-dev zlib-dev"
          [mongodb]=openssl-dev
          [redis]=
          [swoole]=
        )
        ;;

      # Debian
      apt-get)
        # System dependencies for building extensions and downloading PHP
        BUILD_DEPS="autoconf gcc g++ make re2c pkg-config"
        pre_install="apt-get update && apt-get -y install $BUILD_DEPS --no-install-recommends"
        install_deps="apt-get install -y --no-install-recommends "
        post_install="apt-get purge -y --auto-remove $BUILD_DEPS && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/src/*"
        j=$(nproc)

        # Supported PHP extensions for Debian
        declare -A core_extensions=(
          [enchant]=libenchant-dev
          [gmp]=libgmp-dev
          [mcrypt]=libmcrypt-dev
          [mysqli]=
          [soap]=libxml2-dev
          [pcntl]=
          [pdo_mysql]=
          [pdo_pgsql]=postgresql-server-dev-all
          [pgsql]=postgresql-server-dev-all
          [pspell]="libaspell-dev libpspell-dev"
          [tidy]=libtidy-dev
          [wddx]=libxml2-dev
          [xmlrpc]=libxml2-dev
        )

        # Supported PECL extensions for Debian
        declare -A extensions=(
          [imagick]="imagemagick libmagickwand-dev"
          [libsodium]=libsodium-dev
          [memcached]="libmemcached-dev libsasl2-dev zlib1g-dev"
          [mongodb]=openssl-dev
          [redis]=
          [swoole]=
        )
        ;;

      *)
        usage
        exit 1
        ;;
    esac
  fi
done

# Supported PHP extensions options for both systems
declare -A core_extensions_options=(
  [wddx]="--with-libxml-dir"
)

# Install given extension
function install () {
  # If extension has dependencies, install them
  if [ ! -z "${core_extensions[$1]}" ]; then
    eval "$install_deps ${core_extensions[$1]}"
  elif [ ! -z "${extensions[$1]}" ]; then
    eval "$install_deps ${extensions[$1]}"
  fi

  # PHP extension
  if [[ "${!core_extensions[@]}" =~ "$1" ]]; then
    cd /usr/src/php-*/ext/$1
    phpize
    ./configure ${core_extensions_options[$1]}
    make -j"$j"
    make -j"$j" install
    echo "extension=$1.so" | tee /usr/local/etc/php/conf.d/$1.ini

  # PECL extension
  elif [[ "${!extensions[@]}" =~ "$1" ]]; then
    # PECL memcached extension prompts for --with-libmemcached-dir
    if [[ "$1" == "memcached" ]]; then
      yes 'yes' | pecl install $1 && echo "extension=$1.so" | tee /usr/local/etc/php/conf.d/$1.ini
    elif [[ "$1" == "imagick" ]]; then
      yes '' | pecl install $1 && echo "extension=$1.so" | tee /usr/local/etc/php/conf.d/$1.ini
    else
      pecl install $1 && echo "extension=$1.so" | tee /usr/local/etc/php/conf.d/$1.ini
    fi

  # Unsupported extension
  else
    usage
  fi
}

# If arguments are passed
if [ $# -gt 0 ];then
  # Pre-installation tasks - update packages lists and install build dependencies
  eval "$pre_install && cd /usr/src/ && download-php"

  # Install each given extension with its system dependencies
  while [ "$1" != "" ]; do
    install ${1} && shift;
  done;

  # Post installation tasks - removal of build dependencies for smaller Docker image
  eval $post_install

else
  usage
fi
